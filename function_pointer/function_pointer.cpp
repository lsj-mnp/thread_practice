#include <thread>

void plus(int in, int* out)
{
	for (int i = 0; i < 10000; ++i)
	{
		++in;
	}

	*out = in;
}

//메인도 쓰레드임.
int main()
{
	int a{};

	int b{};

	//변수의 주소를 얻어오는 방법 == &변수명
	//배열의 주소를 얻어오는 방법 == 배열의 이름
	//함수의 주소를 얻어오는 방법 == 함수의 이름(함수 뒤에 괄호를 열면 호출하겠다는 뜻임)
	
	//함수는 쓰레드가 생성될 때 바로 호출됨. RAII 패턴
	//서브루틴 == 함수가 다른 함수를 호출함
	//쓰레드마다 지역변수가 따로 생성됨.(함수를 동시에 실행해도 함수 내부의 지역변수는 따로 존재함.)
	std::thread thread1{ plus, 0, &a };

	plus(0, &b);
	//기본 쓰레드에서 새로운 쓰레드 생성 후 다시 기본 쓰레드에 join 한다는 의미.
	//join()은 쓰레드가 일을 마칠 때까지 기다렸다가 마치면 소멸시킴.
	//블로킹 함수 == 어떤 함수가 리턴을 할 때까지 블로킹 함수를 호출한 쓰레드가 멈춤
	//ex) cin 등
	thread1.join();
	
	return 0;
}